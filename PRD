# **당근 게임 웹 버전 PRD (Product Requirements Document)**

## **1. 개요**
- **프로젝트명:** 당근 게임 웹 (Carrot Game Web)
- **목적:** 인터넷에서 유행하는 당근 게임(フルーツボックス)을 웹 브라우저에서 즐길 수 있도록 구현
- **주요 기술 스택:** Ruby on Rails (전체 개발), PostgreSQL (데이터베이스)
- **타겟 사용자:** 일반 유저 및 스트리머

---

## **2. 게임 개요**
### **1) 기본 규칙**
- 17×10의 격자판 위에 1~9가 적힌 당근들이 랜덤하게 배치됨
- 드래그하여 박스를 설정하면 박스 안의 당근들의 합이 **10이 되는 경우** 당근이 사라짐
- 당근이 사라질 때마다 개당 1점을 얻으며, 2분 내 최대한 많은 점수를 획득하는 것이 목표
- 2분의 제한 시간이 지나면 게임 종료

### **2) 점수 시스템**
- 당근을 제거할 때마다 당근 개수만큼 점수를 획득
- 최대한 빠르고 정확하게 조합을 찾아 높은 점수를 기록하는 것이 중요함
- 최적의 플레이로 얻을 수 있는 **최대 점수는 170점**

### **3) 사용 가능한 조합**
- 2개 조합: `19, 28, 37, 46, 55`
- 3개 조합: `118, 127, 136, 145, 226, 235, 244, 334`
- 4개 조합: `1117, 1126, 1135, 1144, 1225, 1234, 1333, 2224, 2233`
- 5개 조합 이상은 가능하지만 사용 빈도가 낮음
- 랜덤으로 배치된 숫자에 따라 클리어 가능 여부가 달라지므로 운 요소가 존재함

### **4) 게임 플레이 흐름**
1. 사용자가 웹사이트에 접속하면 **닉네임과 지역을 입력**하는 화면이 표시됨
2. 닉네임은 자유 입력, 지역은 미리 지정된 옵션 중에서 선택
3. 닉네임과 지역을 입력한 후 **게임 시작 버튼을 클릭하면 3, 2, 1 카운트다운** 후 게임 화면이 표시되며 시작됨
4. 숫자가 적힌 당근이 17×10 격자로 랜덤 배치됨
5. 마우스 드래그 또는 모바일 터치 드래그로 당근을 선택하면 합을 계산하여 **10이 되면 제거**
6. 제한 시간(2분)이 종료되면 최종 점수를 기록하고, **지역별 순위와 전체 순위를 표시하는 팝업 창**이 나타남
7. 사용자는 **다시 시작 버튼**을 눌러 새로운 게임을 시작할 수 있음

---

## **3. 핵심 기능**
### **1) 게임 로직 구현**
- 마우스 드래그 및 모바일 터치 드래그 기능으로 당근 선택 가능
- 당근 합이 10이 될 경우 자동 제거 및 점수 증가
- 제한 시간(2분) 동안 최대한 많은 점수를 획득하는 방식 구현

### **2) 점수 기록 및 랭킹 시스템**
- 플레이어의 닉네임, 지역, 점수를 PostgreSQL에 저장
- 지역별 및 전체 랭킹 제공
- 게임 종료 후 **팝업 창을 통해 순위 확인 가능**

### **3) UI/UX**
- Rails ERB + Stimulus.js 활용하여 간단하고 직관적인 인터페이스 제공
- 반응형 UI (데스크톱/모바일 대응)
- **게임 화면 상단에 항상 음악 온/오프 및 볼륨 조절 버튼 배치**
- 게임 시작 버튼을 클릭하면 **3, 2, 1 카운트다운 후 게임 시작**

---

## **4. 기술 스택**
| 영역        | 기술 스택           | 설명 |
|------------|-------------------|-----|
| 전체 개발  | Ruby on Rails     | MVC 아키텍처 기반 서버 및 프론트엔드 구현 |
| 데이터베이스 | PostgreSQL        | 게임 데이터 및 랭킹 관리 |
| 프론트엔드 | Rails ERB + Stimulus.js | 별도 프레임워크 없이 Rails 내장 기능 활용 |
| 배포       | Railway            | 컨테이너 기반 Rails 배포 서비스 |

---

## **5. 시스템 아키텍처**
- **프론트엔드:** Rails ERB + Stimulus.js로 인터랙티브 요소 구현
- **백엔드:** Rails API → PostgreSQL 데이터 저장
- **배포:** Railway를 활용한 배포 자동화

---

## **6. 게임 흐름**
1. 사용자가 사이트에 접속
2. **닉네임(자유 입력)과 지역(미리 지정된 옵션 중 선택) 입력 화면 표시**
3. 입력 후 **게임 시작 버튼 클릭 → 3, 2, 1 카운트다운 진행**
4. 게임 화면이 표시되며 숫자가 적힌 당근이 랜덤 배치됨
5. 마우스 드래그 또는 모바일 터치 드래그로 당근을 선택하여 합이 10이 되는 경우 제거
6. 2분이 지나면 게임 오버 → 점수 기록 → **팝업 창에서 지역별 및 전체 랭킹 표시, 다시 시작 버튼 제공**
7. 사용자는 다시 시작하여 새로운 게임을 진행할 수 있음

---

## **7. 마일스톤 (예시)**
| 기간 | 작업 내용 |
|------|---------|
| Week 1 | 프로젝트 초기 설정 (Rails 환경 설정 및 ERB 기반 UI 개발) |
| Week 2 | 기본 게임 로직 구현 (드래그, 합산, 제거) |
| Week 3 | 점수 기록 및 랭킹 기능 구현 (PostgreSQL 연동) |
| Week 4 | 닉네임 및 지역 입력 기능 개발 |
| Week 5 | UI/UX 개선 및 모바일 대응 |
| Week 6 | 배포 및 성능 최적화 |

---

이 PRD를 기반으로 Rails와 PostgreSQL을 활용한 웹 게임을 개발하면 될 것 같습니다! 추가할 내용이나 변경할 부분이 있으면 알려주세요. 🚀

